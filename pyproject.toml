[build-system]
requires = [
    "setuptools>=64",
    "setuptools-scm>=8",
    "versioneer[toml]",
]
build-backend = "setuptools.build_meta"

[project]
name = "artiq-fork"
dynamic = [
    "version",
]
description = "ARTIQ Fork - Custom extensions and modifications"
readme = "README.md"
authors = [
    { name = "ARTIQ Fork Contributors" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: System :: Hardware",
]
requires-python = ">=3.13"
dependencies = [
    "numpy",
    "scipy",
    "python-dateutil",
    "prettytable",
    "pyserial",
    "h5py",
    "tqdm",
    "lmdb",
    "jsonschema",
    "platformdirs",
    "rich>=14.1.0",
    "requests>=2.32.4",
    "colorama",
    "jinja2",
    "msgpack",
    "regex",
    "plotly>=6.2.0",
    "pytest",
    "pytest-asyncio",
    "black",
    "flake8",
    "mypy",
    "jupyter",
    "ipython",
    "sympy",
    "astropy",
    "uncertainties",
    "lmfit",
    "bokeh",
    "seaborn",
    "pyqtgraph",
    "scikit-learn",
    "torch",
    "torchvision",
]

[project.license]
text = "LGPL-3.0-or-later"

[project.urls]
Research-Website = "https://www.strontium-birmingham.org/"
Repository = "https://github.com/alkalineteam/ARTIQ-alkaline"
Fork = "https://github.com/alkalineteam/ARTIQ-alkaline-fork"

[tool.uv]
index-strategy = "unsafe-best-match"

[[tool.uv.index]]
name = "pytorch-cuda"
url = "https://download.pytorch.org/whl/cu129"

[tool.uv.sources]
torch = { index = "pytorch-cuda" }

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
include = [
    "artiq_fork*",
]

[tool.setuptools.package-data]
artiq_fork = [
    "*.json",
    "*.yaml",
    "*.yml",
    "config/*",
]

[tool.black]
line-length = 88
target-version = [
    "py313",
]
include = "\\.pyi?$"
exclude = "/(\n    \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n)/\n"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[dependency-groups]
dev = [
    "jupyter>=1.1.1",
]
